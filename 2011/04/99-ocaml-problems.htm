@title 99 OCaml Problems
@date 2011-04-13
@tags functional ocaml tutorial learning algorithms
@draft

I find that when learning the basics of a new functional language, or introducing oneself to functional programming in general, the <a href="http://www.ic.unicamp.br/~meidanis/courses/mc336/2006s2/funcional/L-99_Ninety-Nine_Lisp_Problems.html" target="_blank">99 Lisp Problems</a> are a <a href="http://blog.tbueno.com/2011/04/12/programming_problems_to_improve_your_language_skills.html" target="_blank">good start</a>. You don't have to run through all of them, but how fast you can solve them says a lot about your fluency in the language, and has many things to teach even to otherwise experienced programmers.

I've started committing solutions to those 99 problems in the Objective Caml language to GitHub ; the repository is:
<p style="padding-left: 30px;"><a href="https://github.com/VictorNicollet/99-Problems-OCaml" target="_blank">https://github.com/VictorNicollet/99-Problems-OCaml</a></p>
If you're interested in starting OCaml programming, have read the manual, and are looking for exercises to get up to speed, consider spending a little time trying to come up with the solutions on your own, using my solutions as a reference. And if you're an OCaml expert, feel free to propose corrections and improvements : this is what GitHub is for.

Other solutions for OCaml do exist, for instance from <a href="http://www.christiankissig.de/cms/index.php/en/programming/28-ocaml/28-99-problems-in-ocaml" target="_blank">Christian Kissig</a>, which is currently more complete than mine. Note that we don't share the same philosophy as far as writing the code goes, so you can probably look at both sides of the issues. For example, on the "find the last element of a list" problem, Christian throws an exception if no last element exists, while I return None, because <a href="http://www.nicollet.net/2011/02/exception-avoidance/" target="_blank">I hate exceptions</a>.

Enjoy.