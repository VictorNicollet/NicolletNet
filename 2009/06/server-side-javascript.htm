@title Server-Side JavaScript
@draft

The more you work on the web these days, the more JavaScript you have to write. Making pages dynamic with one toolkit or another has become a staple of the web developer ecosystem, and it leads to two classic issues:
<ul>
	<li>It's annoying to have two languages communicate across the server/client barrier. It would certainly be easier to use the same language on both, especially if it allows you to do nifty things like passing closures from the server to the client or the other way around. And you can reuse the code.</li>
</ul>
<ul>
	<li>While quite lacking in terms of server-side libraries, EcmaScript is a very consistent, concise and powerful language that supports an elegant function model and an elegant object model. If you already have JavaScript programmers on your team it would be a waste not to use the language for the server side as well.</li>
</ul>
It looks like there are other people around who think like me. And, to avoid the PHP fiasco where a single team hardcoded some very nasty habits into the language, they started a <a href="https://wiki.mozilla.org/ServerJS" target="_blank">discussion group to make those decisions</a> ahead of time. I will definitely be joining—let the functional programming invasion continue :)