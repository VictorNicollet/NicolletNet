@title Unit Testing
@date 2008-09-30
@tags dynamic php
@draft

Once upon a time, software was tested by people who used the programs down to every bit of functionality and sent a memo to the developers when they noticed something was amiss. This method usually detected the most obvious bugs in the program (assuming, of course, the testers were competent at exploring the entire feature set) and allowed the developers to correct them before shipping.

This method involved two main issues.
<ol>
	<li>The first issue was that it was slow : when a programmer changed a few lines of code in a single file, he couldn't just ask for a complete test of the entire application. Although he could perform a cursory test himself, he had to go on without the certainty that his modifications broke the application in a subtle way that only thorough testing could detect.</li>
	<li>The second issue was that there was no granularity. When a tester found a bug, that bug was always discovered through the application's user interface, and the developers had to backtrack from there to the entire application code behind that bit of interface to find the origin of the bug. There was no way for a tester to identify the function where a bug appeared.</li>
</ol>
Automatic Unit Testing solves both issues. An automatic unit test is a piece of code which will automatically perform a test on a small piece of program functionality called an unit. The result is that developers can run entire suites of unit tests with the press of a button as soon as they finish writing or changing code, and that the test clearly identifies which unit provided incorrect results and thus greatly reduces the search perimeter for the bug.
<h2>A simple example</h2>
Your program uses a function which removes all duplicates from a sorted array of integers. The function is written as such:
<blockquote>
<pre style="background: #ffffff none repeat scroll 0% 50%; color: #000000;"><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000084; font-weight: bold;">function</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;"> uniques</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">(</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">$array</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">)</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;"> </span> 
<span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">{</span> 
<span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">  </span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000084; font-weight: bold;">foreach</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">(</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">$array</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;"> </span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000084; font-weight: bold;">as</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;"> </span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">$value</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">)</span> 
<span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">  </span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">{</span> 
<span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">    </span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000084; font-weight: bold;">if</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;"> </span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">(</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">$value</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;"> </span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">!</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">=</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;"> </span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">$last</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">)</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;"> </span> 
<span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">      </span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">$result</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">[</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">]</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;"> </span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">=</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;"> </span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">$value</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">;</span> 
<span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">    </span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">$last</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;"> </span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">=</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;"> </span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">$value</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">;</span> 
<span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">  </span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">}</span> 

<span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">  </span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000084; font-weight: bold;">return</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;"> </span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">$result</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">;</span> 
<span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">}</span></pre>
</blockquote>
The astute and experienced reader will have noticed by now several bugs in this implementation, but mostly this looks like the typical PHP function an average developer would write at 6PM a few minutes before leaving work, and it works on most input.

Tests for this function (which I provide here without a unit testing framework for the sake of simplicity, though I do encourage using one) would be as follows:
<blockquote>
<pre style="background: #ffffff none repeat scroll 0% 50%; color: #000000;"><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000084; font-weight: bold;">function</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;"> test_uniques_empty</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">(</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">)</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;"> </span> 
<span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">{</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;"> </span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000084; font-weight: bold;">assert</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;"> </span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">(</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">uniques</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">(</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000084; font-weight: bold;">array</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">(</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">)</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">)</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;"> </span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">=</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">=</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">=</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;"> </span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000084; font-weight: bold;">array</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">(</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">)</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">)</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">;</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;"> </span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">}</span> 

<span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000084; font-weight: bold;">function</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;"> test_uniques_just_one</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">(</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">)</span> 
<span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">{</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;"> </span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000084; font-weight: bold;">assert</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;"> </span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">(</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">uniques</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">(</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000084; font-weight: bold;">array</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">(</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">0</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">,</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">0</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">,</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">0</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">)</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">)</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;"> </span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">=</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">=</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">=</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;"> </span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000084; font-weight: bold;">array</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">(</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">0</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">)</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">)</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">;</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;"> </span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">}</span> 

<span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000084; font-weight: bold;">function</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;"> test_uniques_distinct</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">(</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">)</span> 
<span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">{</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;"> </span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000084; font-weight: bold;">assert</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;"> </span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">(</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">uniques</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">(</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000084; font-weight: bold;">array</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">(</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">1</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">,</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">2</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">,</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">3</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">)</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">)</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;"> </span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">=</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">=</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">=</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;"> </span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000084; font-weight: bold;">array</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">(</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">1</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">,</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">2</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">,</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">3</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">)</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">)</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">;</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;"> </span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">}</span></pre>
</blockquote>
These tests describe example situations where the function could be used, with the arguments, and checks that the return value for the function is indeed what is expected. Should the return value not be what the developer wants it to be, the test will display an assertion failure.

The tests are run, and both <span style="font-family: courier new,courier; color: #999999;">test_uniques_empty</span> and <span style="font-family: courier new,courier; color: #999999;">test_uniques_just_one</span> will fail.The developer determines that the first call to <span style="font-family: courier new,courier; color: #999999;">uniques()</span> returned <span style="font-family: courier new,courier; color: #999999;">null</span> (not surprising, since <span style="font-family: courier new,courier; color: #999999;">$result</span> is only initialized if the array contains elements) and <span style="font-family: courier new,courier; color: #999999;">uniques(array(0,0,0))</span> returns an empty array (again, not very surprising since <span style="font-family: courier new,courier; color: #999999;">$value != $last</span> tests false when <span style="font-family: courier new,courier; color: #999999;">$value</span> is zero and <span style="font-family: courier new,courier; color: #999999;">$last</span> is uninitialized).

This leads to a corrected version of the function, which now passes all tests:
<blockquote>
<pre style="background: #ffffff none repeat scroll 0% 50%; color: #000000;"><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000084; font-weight: bold;">function</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;"> uniques</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">(</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">$array</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">)</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;"> </span> 
<span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">{</span> 
  $last = 0;
  $result = <span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000084; font-weight: bold;">array</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">(</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">);
</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">  </span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000084; font-weight: bold;">foreach</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">(</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">$array</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;"> </span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000084; font-weight: bold;">as</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;"> </span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">$value</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">)</span> 
<span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">  </span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">{</span> 
<span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">    </span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000084; font-weight: bold;">if</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;"> </span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">(</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">$value</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;"> </span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">!</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">=</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;"> </span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">$last</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">)</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;"> </span> 
<span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">      </span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">$result</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">[</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">]</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;"> </span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">=</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;"> </span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">$value</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">;</span> 
<span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">    </span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">$last</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;"> </span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">=</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;"> </span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">$value</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">;</span> 
<span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">  </span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">}</span> 

<span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">  </span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000084; font-weight: bold;">return</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;"> </span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">$result</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">;</span> 
<span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">}</span></pre>
</blockquote>
Should the developer need to alter the function (for instance, to use a standard library function or to perform checks on the arguments) the unit tests can be run again to determine that the original behavior of the function was retained after the modifications.
<h2>Test First</h2>
Testing can only show the existence of errors, not prove that a program is correct, but the better the tests and the higher the probability that any important bugs are weeded out, leaving only those that appear in very complex conditions.

Of course, this assumes that the tests are, themselves, correct. While a human tester can use his common sense or experience to perform meaningful tests, an automatic unit test can only do what it was told to do. Consider for instance the following function:
<blockquote>
<pre style="background: #ffffff none repeat scroll 0% 50%; color: #000000;"><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000084; font-weight: bold;">function</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;"> square</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">(</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">$x</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">)</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;"> </span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">{</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;"> </span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000084; font-weight: bold;">return</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;"> </span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">$y</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;"> </span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">*</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;"> </span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">$y</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">;</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;"> </span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">}</span> 

<span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000084; font-weight: bold;">function</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;"> test_square</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">(</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">)</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;"> </span> 
<span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">{</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;"> </span> 
<span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">  </span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">$result</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;"> </span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">=</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;"> square</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">(</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">4</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">)</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">;</span> 
<span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">  </span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000084; font-weight: bold;">assert</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;"> </span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">(</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">$result</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;"> </span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">=</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;"> </span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">16</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">)</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">;</span> 
<span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">}</span></pre>
</blockquote>
Blind reliance on unit testing in the above case results in wasted time and hairs being pulled out. The test passes, so the function must work. The issue is, of course, that both the test and the function are wrong. The problem : <strong>the only value of a test is that it can fail</strong>. As such, every test that is written must somehow prove that it can fail in some situations, which of course for the function above is not a possibility.

The solution : <strong>write the tests before the code that is being tested</strong>, then run them. If they don't fail (as they should), then they aren't any good. In the above example, if the non-implemented version of <span style="font-family: courier new,courier; color: #999999;">square </span>is made to return -1, then any test for that function should fail.
<blockquote>
<pre style="background: #ffffff none repeat scroll 0% 50%; color: #000000;"><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000084; font-weight: bold;">function</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;"> square</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">(</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">$x</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">)</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;"> </span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">{</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;"> </span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000084; font-weight: bold;">return</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;"> </span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">-1</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">;</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;"> </span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">}</span> 

<span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000084; font-weight: bold;">function</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;"> test_square</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">(</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">)</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;"> </span> 
<span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">{</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;"> </span> 
<span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">  </span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">$result</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;"> </span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">=</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;"> square</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">(</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">4</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">)</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">;</span> 
<span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">  </span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000084; font-weight: bold;">assert</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;"> </span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">(</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">$result</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;"> </span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">=</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;"> </span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">16</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">)</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">;</span> 
<span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">}</span></pre>
</blockquote>
Since the test above doesn't fail, it would then be examined to determine why, and corrected, leading to the correct version of the test. Then, once the <span style="font-family: courier new,courier; color: #999999;">square </span>function is implemented, the test will fail again (indicating that an error is present), leading to the correct version of the function and the complete code:
<blockquote>
<pre style="background: #ffffff none repeat scroll 0% 50%; color: #000000;"><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000084; font-weight: bold;">function</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;"> square</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">(</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">$x</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">)</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;"> </span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">{</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;"> </span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000084; font-weight: bold;">return</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;"> </span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">$x</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;"> </span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">*</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;"> </span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">$x</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">;</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;"> </span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">}</span> 

<span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000084; font-weight: bold;">function</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;"> test_square</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">(</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">)</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;"> </span> 
<span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">{</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;"> </span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000084; font-weight: bold;">assert</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;"> </span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">(</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">square(4)</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;"> </span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">===</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;"> </span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">16</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">)</span><span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">;</span> <span style="background: #ffffe8 none repeat scroll 0% 50%; color: #000000;">}</span></pre>
</blockquote>
This is the test first philosophy : whenever a new piece of functionality has to be written, a test should be written first to demonstrate that the functionality has been written correctly, and the developer should check that the test fails if the functionality has not been written first.
<h2>Test-Driven Design</h2>
Test-driven design pushes the logic of Test First even further : since when using a Test First process the functionality is not implemented until the tests are done, it's possible to use the tests to evaluate the design of the code. As such, if the design makes the functionality difficult to use within a unit test, then it can be reasonably assumed that the design will also be difficult to use in a general situation. Of course, it may be extremely well adapter to a niche usage within the system, but reusing that code outside the niche will then prove just as difficult as it was when writing the tests.

As such, Test-Driven Design consists in starting with an elementary design, writing a unit test for that design, and then reworking the design based on the usage done in the unit tests so that the functionality is as easy to use as possible.