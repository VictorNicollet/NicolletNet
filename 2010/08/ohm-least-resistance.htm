@title Ohm - Least Resistance
@date 2010-08-30
@tags functional php architecture productivity mvc framework ohm
@draft

<small>A few astute readers have noticed that there was a new section, titled <em>Ohm</em>, in the blog header above. They have written in private to ask me, and were shortly included in the private beta testing phase for the project. That phase has now come to an end, as I now reveal the project to begin its open beta testing phase.</small>

<img class="alignleft size-full wp-image-1934" style="margin: 0pt 5px 0px 0pt;" title="ohm-70x70" src="http://www.nicollet.net/wp-content/uploads/2010/08/ohm-70x70.png" alt="ohm-70x70" width="70" height="70" /><a href="http://www.nicollet.net/ohm-least-resistance/"><strong>Ohm - Least Resistance</strong></a> is a lightweight PHP 5.2 framework designed to be as simple as possible. You <em>can</em> use Ohm before your morning cup of coffee. If you need to do something clever or unusual, you <em>can</em> read the Ohm source code to find out how you can bend it to your needs: it's only 2,000 lines, comments included. And Ohm conveys this simplicity to your own code, if you are willing to accept its philosophy:
<blockquote>1. Most frameworks can be extended because there are configuration options for every single piece of behavior. <strong>Ohm</strong> can be extended because it's extremely simple.

2. Most frameworks help the programmer write code faster, often pushing the dynamic nature of PHP beyond its safe boundaries. <strong>Ohm</strong> recognizes that reading code is harder than writing it, and helps the programmer write code that is easy to read later on.

3. Most frameworks try to become repositories for countless pieces of useful but highly specific functionality. <strong>Ohm</strong> concentrates on being a HTTP/PHP/MySQL framework.</blockquote>
The Ohm framework is <strong>open source</strong>. In fact, its code is in the public domain, though I appreciate references and/or links back to the <a href="../ohm-least-resistance/" target="_blank">project page</a>. What you get by downloading the framework:
<ul>
	<li><strong>Class auto-loader</strong> : finds your classes based on their name, so you don't have to use <em>require</em> and <em>include</em> all over the place.</li>
	<li><strong>Request dispatcher</strong> : responds to HTTP requests by loading the appropriate action class and executing its response method.</li>
	<li><strong>Model-View-Controller</strong> : the framework layout follows the MVC pattern and helps your application do so as well.</li>
	<li><strong>Reusable Layouts</strong> : lets you define generic page templates that will be wrapped around the actual template. You can insert JS/CSS into the layout from the content.</li>
	<li><strong>Simple Forms</strong> : a backbone module for creating, processing and drawing HTML forms that you can extend to fit your needs.</li>
	<li><strong>Database Layer</strong> : a dead-simple extension on top of <em>mysqli</em> that lets you have an easier time writing SQL requests and retrieving the data, without having to learn a new query language.</li>
</ul>
If you have any questions about the framework, you can contact me directly (<a href="mailto:victor-ohm@nicollet.net">victor-ohm@nicollet.net</a>). Any comments and feedback are welcome (this is an open beta, after all), either by mail or as comments on this post.

Enjoy!